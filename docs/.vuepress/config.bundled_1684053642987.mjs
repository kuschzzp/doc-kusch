// docs/.vuepress/config.ts
import { defineConfig4CustomTheme } from "vuepress/config";
import dayjs from "dayjs";

// docs/.vuepress/config/baiduCode.ts
var baiduCode_default = "503f098e7e5b3a5b5d8c5fc2938af002";

// docs/.vuepress/config/htmlModules.ts
var htmlModule = {
  homeSidebarB: `<div style="padding: 0.95rem">
    <p style="
      color: var(--textColor);
      opacity: 0.9;
      font-size: 20px;
      font-weight: bold;
      margin: 0 0 8px 0;
    ">\u516C\u4F17\u53F7</p>
    <img src="https://img.superkusch.fun/docs/%E5%85%AC%E4%BC%97%E5%8F%B7.jpg"  style="width:100%;" />
    \u5173\u6CE8\u516C\u4F17\u53F7\uFF0C\u53EF\u83B7\u53D6\u66F4\u591A\u6709\u8DA3\u7684\u4E1C\u897F!
    </p>
    </div>`
};
var htmlModules_default = htmlModule;

// docs/.vuepress/config.ts
var DOMAIN_NAME = "superkusch.fun";
var WEB_SITE = `https://${DOMAIN_NAME}`;
var config_default = defineConfig4CustomTheme({
  theme: "vdoing",
  dest: "./ROOT",
  locales: {
    "/": {
      lang: "zh-CN",
      title: "Kusch's blog",
      description: "Kusch\u7684\u5C0F\u7834\u7AD9\uFF0C\u65F6\u4E0D\u65F6\u5199\u5199\u6587\u7AE0\uFF0C\u6574\u70B9\u5947\u602A\u7684\u4E1C\u897F\u3002"
    }
  },
  themeConfig: {
    nav: [
      { text: "\u9996\u9875", link: "/" },
      {
        text: "Java",
        link: "/java/"
      },
      {
        text: "\u6846\u67B6",
        link: "/framework/"
      },
      {
        text: "\u90E8\u7F72\u4E0E\u8FD0\u7EF4",
        link: "/technology/"
      },
      {
        text: "\u6570\u636E\u5E93",
        link: "/database/"
      },
      {
        text: "\u66F4\u591A",
        link: "/more/",
        items: [
          { text: "\u6211\u7684\u7535\u8111", link: "/pages/words/" },
          { text: "\u79D1\u5B66\u6280\u5DE7", link: "/pages/science/" },
          { text: "\u6742\u6587\u94FA", link: "/pages/d9c430/" },
          { text: "\u53CB\u60C5\u94FE\u63A5", link: "/friends/" }
        ]
      },
      { text: "\u5173\u4E8E", link: "/about/" },
      {
        text: "\u6536\u85CF",
        link: "/pages/networks/"
      },
      {
        text: "\u7D22\u5F15",
        link: "/archives/",
        items: [
          { text: "\u5206\u7C7B", link: "/categories/" },
          { text: "\u6807\u7B7E", link: "/tags/" },
          { text: "\u5F52\u6863", link: "/archives/" }
        ]
      }
    ],
    sidebarDepth: 2,
    logo: "/img/avatar.png",
    repo: "kuschzzp/doc-kusch",
    searchMaxSuggestions: 10,
    lastUpdated: "\u4E0A\u6B21\u66F4\u65B0",
    docsDir: "docs",
    editLinks: true,
    editLinkText: "\u7F16\u8F91",
    indexImg: {
      navColor: 2,
      switchNavColor: true,
      bgTimeColor: true,
      bgTimeColorArray: ["transparent", "rgba(255, 148, 48, .2)", "rgba(0, 0, 0, .3)", "rgba(0, 0, 0, .5)"],
      descFade: true,
      desc: ["\u81EA\u7136\u8D50\u7ED9\u4E86\u6211\u4EEC\u77E5\u8BC6\u7684\u79CD\u5B50\uFF0C\u800C\u4E0D\u662F\u77E5\u8BC6\u7684\u672C\u8EAB\u3002\u2014\u2014 \u5BD2\u6D85\u5361", "\u8F9B\u52E4\u7684\u871C\u8702\u6C38\u6CA1\u6709\u65F6\u95F4\u60B2\u54C0\u3002\u2014\u2014 \u5E03\u83B1\u514B", "\u4EFB\u4F55\u95EE\u9898\u90FD\u6709\u89E3\u51B3\u7684\u529E\u6CD5\uFF0C\u65E0\u6CD5\u53EF\u60F3\u7684\u4E8B\u662F\u6CA1\u6709\u7684\u3002\u2014\u2014 \u7231\u8FEA\u751F"],
      descFontSize: "1.4rem",
      descFadeInTime: 200,
      descFadeOutTime: 100,
      descNextTime: 800,
      bubble: true,
      bubblePosition: 0,
      bubbleNum: 200
    },
    bodyBgImg: [
      "/img/bg01_sm.jpg",
      "/img/bg02_sm.jpg"
    ],
    bodyBgImgOpacity: 1,
    bodyBgImgInterval: 300,
    sidebar: "structuring",
    author: {
      name: "Mr.Kusch",
      link: "https://github.com/kuschzzp"
    },
    blogger: {
      avatar: "https://img.superkusch.fun/docs/81640256690_.pic.jpg",
      name: "Mr.Kusch",
      slogan: "\u5165\u95E8\u524D\u628A\u95E8\u62C6\u4E86\u7684\u7A0B\u5E8F\u733F\u4E00\u679A"
    },
    social: {
      icons: [
        {
          iconClass: "icon-youjian",
          title: "\u53D1\u90AE\u4EF6",
          link: "mailto:superkusch@foxmail.com"
        },
        {
          iconClass: "icon-github",
          title: "GitHub",
          link: "https://github.com/kuschzzp"
        },
        {
          iconClass: "icon-erji",
          title: "\u542C\u97F3\u4E50",
          link: "https://music.163.com/#/playlist?id=755597173"
        }
      ]
    },
    footer: {
      createYear: 2023,
      copyrightInfo: 'Mr.Kusch | <a href="https://github.com/xugaoyi/vuepress-theme-vdoing/blob/master/LICENSE" target="_blank">MIT License</a> | <a href="http://beian.miit.gov.cn/" target="_blank">\u82CFICP\u590720030181\u53F7-1</a>'
    },
    extendFrontmatter: {
      author: {
        name: "Mr.Kusch",
        link: "https://github.com/kuschzzp"
      }
    },
    htmlModules: htmlModules_default
  },
  head: [
    ["link", { rel: "icon", href: "/img/favicon.ico" }],
    ["link", { rel: "stylesheet", href: "//at.alicdn.com/t/font_3114978_qe0b39no76.css" }],
    [
      "meta",
      {
        name: "keywords",
        content: "\u540E\u7AEF\u535A\u5BA2,\u4E2A\u4EBA\u6280\u672F\u535A\u5BA2,\u540E\u7AEF,\u540E\u7AEF\u5F00\u53D1,\u540E\u7AEF\u6846\u67B6,Java\u540E\u7AEF,\u540E\u7AEF\u9762\u8BD5\u9898,\u6280\u672F\u6587\u6863,\u5B66\u4E60,\u9762\u8BD5,Java,Spring,SpringBoot,SpringCloud,Jenkins,K8s,git,github,markdown"
      }
    ],
    ["meta", { name: "baidu-site-verification", content: "7F55weZDDc" }],
    ["meta", { name: "theme-color", content: "#11a8cd" }]
  ],
  plugins: [
    [
      "sitemap",
      {
        hostname: WEB_SITE
      }
    ],
    "vuepress-plugin-baidu-autopush",
    [
      "vuepress-plugin-baidu-tongji",
      {
        hm: baiduCode_default
      }
    ],
    [
      "thirdparty-search",
      {
        thirdparty: [
          {
            title: "\u5728Runoob\u4E2D\u641C\u7D22",
            frontUrl: "https://www.runoob.com/?s="
          },
          {
            title: "\u5728Bing\u4E2D\u641C\u7D22",
            frontUrl: "https://cn.bing.com/search?q="
          }
        ]
      }
    ],
    [
      "one-click-copy",
      {
        copySelector: ['div[class*="language-"] pre', 'div[class*="aside-code"] aside'],
        copyMessage: "\u590D\u5236\u6210\u529F",
        duration: 1e3,
        showInMobile: false
      }
    ],
    [
      "demo-block",
      {
        settings: {
          jsfiddle: false,
          codepen: true,
          horizontal: false
        }
      }
    ],
    [
      "vuepress-plugin-zooming",
      {
        selector: ".theme-vdoing-content img:not(.no-zoom)",
        options: {
          bgColor: "rgba(0,0,0,0.6)"
        }
      }
    ],
    [
      "vuepress-plugin-comment",
      {
        choosen: "gitalk",
        options: {
          clientID: "8ac910a7839482975f38",
          clientSecret: "805861d59df052b96e68e18235769ecc5c07be02",
          repo: "doc-kusch",
          owner: "kuschzzp",
          admin: ["kuschzzp"],
          pagerDirection: "last",
          id: "<%- (frontmatter.permalink || frontmatter.to.path).slice(-16) %>",
          title: "\u300C\u8BC4\u8BBA\u300D<%- frontmatter.title %>",
          labels: ["Gitalk", "Comment"],
          body: "\u9875\u9762\uFF1A<%- window.location.origin + (frontmatter.to.path || window.location.pathname) %>"
        }
      }
    ],
    [
      "@vuepress/last-updated",
      {
        transformer: (timestamp, lang) => {
          return dayjs(timestamp).format("YYYY/MM/DD, HH:mm:ss");
        }
      }
    ],
    [
      "dynamic-title",
      {
        showIcon: "/favicon.ico",
        showText: "(/\u2267\u25BD\u2266/)\u54A6\uFF01\u6765\u5566\uFF5E",
        hideIcon: "/failure.ico",
        hideText: "(\u25CF\u2014\u25CF)\u5594\u54DF\uFF0C\u522B\u8D70\u561B\uFF01",
        recoverTime: 2e3
      }
    ],
    [
      "cursor-effects"
    ],
    [
      "reading-progress"
    ],
    [
      {
        name: "custom-plugins",
        globalUIComponents: ["BlockToggle"]
      }
    ]
  ],
  markdown: {
    lineNumbers: true,
    extractHeaders: ["h2", "h3", "h4", "h5", "h6"]
  },
  extraWatchFiles: [
    ".vuepress/config.ts",
    ".vuepress/config/htmlModules.ts"
  ]
});
export {
  config_default as default
};
//# sourceMappingURL=data:application/json;base64,
